<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.circular.browser.dao.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="com.circular.browser.dao.model.User">
    <id column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="login_id" jdbcType="VARCHAR" property="loginId" />
    <result column="user_phone_number" jdbcType="VARCHAR" property="userPhoneNumber" />
    <result column="user_nickname" jdbcType="VARCHAR" property="userNickname" />
    <result column="user_birthday" jdbcType="DATE" property="userBirthday" />
    <result column="user_gender" jdbcType="INTEGER" property="userGender" />
    <result column="user_tiny_img" jdbcType="VARCHAR" property="userTinyImg" />
    <result column="user_status" jdbcType="INTEGER" property="userStatus" />
    <result column="user_level" jdbcType="INTEGER" property="userLevel" />
    <result column="user_address" jdbcType="VARCHAR" property="userAddress" />
    <result column="user_logo" jdbcType="VARCHAR" property="userLogo" />
    <result column="user_email" jdbcType="VARCHAR" property="userEmail" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    user_id, login_id, user_phone_number, user_nickname, user_birthday, user_gender, 
    user_tiny_img, user_status, user_level, user_address, user_logo, user_email, create_time, 
    update_time
  </sql>
  <select id="selectByExample" parameterType="com.circular.browser.dao.model.UserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where user_id = #{userId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where user_id = #{userId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.circular.browser.dao.model.UserExample">
    delete from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.circular.browser.dao.model.User">
    insert into user (user_id, login_id, user_phone_number, 
      user_nickname, user_birthday, user_gender, 
      user_tiny_img, user_status, user_level, 
      user_address, user_logo, user_email, 
      create_time, update_time)
    values (#{userId,jdbcType=INTEGER}, #{loginId,jdbcType=VARCHAR}, #{userPhoneNumber,jdbcType=VARCHAR}, 
      #{userNickname,jdbcType=VARCHAR}, #{userBirthday,jdbcType=DATE}, #{userGender,jdbcType=INTEGER}, 
      #{userTinyImg,jdbcType=VARCHAR}, #{userStatus,jdbcType=INTEGER}, #{userLevel,jdbcType=INTEGER}, 
      #{userAddress,jdbcType=VARCHAR}, #{userLogo,jdbcType=VARCHAR}, #{userEmail,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.circular.browser.dao.model.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="loginId != null">
        login_id,
      </if>
      <if test="userPhoneNumber != null">
        user_phone_number,
      </if>
      <if test="userNickname != null">
        user_nickname,
      </if>
      <if test="userBirthday != null">
        user_birthday,
      </if>
      <if test="userGender != null">
        user_gender,
      </if>
      <if test="userTinyImg != null">
        user_tiny_img,
      </if>
      <if test="userStatus != null">
        user_status,
      </if>
      <if test="userLevel != null">
        user_level,
      </if>
      <if test="userAddress != null">
        user_address,
      </if>
      <if test="userLogo != null">
        user_logo,
      </if>
      <if test="userEmail != null">
        user_email,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="loginId != null">
        #{loginId,jdbcType=VARCHAR},
      </if>
      <if test="userPhoneNumber != null">
        #{userPhoneNumber,jdbcType=VARCHAR},
      </if>
      <if test="userNickname != null">
        #{userNickname,jdbcType=VARCHAR},
      </if>
      <if test="userBirthday != null">
        #{userBirthday,jdbcType=DATE},
      </if>
      <if test="userGender != null">
        #{userGender,jdbcType=INTEGER},
      </if>
      <if test="userTinyImg != null">
        #{userTinyImg,jdbcType=VARCHAR},
      </if>
      <if test="userStatus != null">
        #{userStatus,jdbcType=INTEGER},
      </if>
      <if test="userLevel != null">
        #{userLevel,jdbcType=INTEGER},
      </if>
      <if test="userAddress != null">
        #{userAddress,jdbcType=VARCHAR},
      </if>
      <if test="userLogo != null">
        #{userLogo,jdbcType=VARCHAR},
      </if>
      <if test="userEmail != null">
        #{userEmail,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.circular.browser.dao.model.UserExample" resultType="java.lang.Integer">
    select count(*) from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user
    <set>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.loginId != null">
        login_id = #{record.loginId,jdbcType=VARCHAR},
      </if>
      <if test="record.userPhoneNumber != null">
        user_phone_number = #{record.userPhoneNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.userNickname != null">
        user_nickname = #{record.userNickname,jdbcType=VARCHAR},
      </if>
      <if test="record.userBirthday != null">
        user_birthday = #{record.userBirthday,jdbcType=DATE},
      </if>
      <if test="record.userGender != null">
        user_gender = #{record.userGender,jdbcType=INTEGER},
      </if>
      <if test="record.userTinyImg != null">
        user_tiny_img = #{record.userTinyImg,jdbcType=VARCHAR},
      </if>
      <if test="record.userStatus != null">
        user_status = #{record.userStatus,jdbcType=INTEGER},
      </if>
      <if test="record.userLevel != null">
        user_level = #{record.userLevel,jdbcType=INTEGER},
      </if>
      <if test="record.userAddress != null">
        user_address = #{record.userAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.userLogo != null">
        user_logo = #{record.userLogo,jdbcType=VARCHAR},
      </if>
      <if test="record.userEmail != null">
        user_email = #{record.userEmail,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user
    set user_id = #{record.userId,jdbcType=INTEGER},
      login_id = #{record.loginId,jdbcType=VARCHAR},
      user_phone_number = #{record.userPhoneNumber,jdbcType=VARCHAR},
      user_nickname = #{record.userNickname,jdbcType=VARCHAR},
      user_birthday = #{record.userBirthday,jdbcType=DATE},
      user_gender = #{record.userGender,jdbcType=INTEGER},
      user_tiny_img = #{record.userTinyImg,jdbcType=VARCHAR},
      user_status = #{record.userStatus,jdbcType=INTEGER},
      user_level = #{record.userLevel,jdbcType=INTEGER},
      user_address = #{record.userAddress,jdbcType=VARCHAR},
      user_logo = #{record.userLogo,jdbcType=VARCHAR},
      user_email = #{record.userEmail,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.circular.browser.dao.model.User">
    update user
    <set>
      <if test="loginId != null">
        login_id = #{loginId,jdbcType=VARCHAR},
      </if>
      <if test="userPhoneNumber != null">
        user_phone_number = #{userPhoneNumber,jdbcType=VARCHAR},
      </if>
      <if test="userNickname != null">
        user_nickname = #{userNickname,jdbcType=VARCHAR},
      </if>
      <if test="userBirthday != null">
        user_birthday = #{userBirthday,jdbcType=DATE},
      </if>
      <if test="userGender != null">
        user_gender = #{userGender,jdbcType=INTEGER},
      </if>
      <if test="userTinyImg != null">
        user_tiny_img = #{userTinyImg,jdbcType=VARCHAR},
      </if>
      <if test="userStatus != null">
        user_status = #{userStatus,jdbcType=INTEGER},
      </if>
      <if test="userLevel != null">
        user_level = #{userLevel,jdbcType=INTEGER},
      </if>
      <if test="userAddress != null">
        user_address = #{userAddress,jdbcType=VARCHAR},
      </if>
      <if test="userLogo != null">
        user_logo = #{userLogo,jdbcType=VARCHAR},
      </if>
      <if test="userEmail != null">
        user_email = #{userEmail,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.circular.browser.dao.model.User">
    update user
    set login_id = #{loginId,jdbcType=VARCHAR},
      user_phone_number = #{userPhoneNumber,jdbcType=VARCHAR},
      user_nickname = #{userNickname,jdbcType=VARCHAR},
      user_birthday = #{userBirthday,jdbcType=DATE},
      user_gender = #{userGender,jdbcType=INTEGER},
      user_tiny_img = #{userTinyImg,jdbcType=VARCHAR},
      user_status = #{userStatus,jdbcType=INTEGER},
      user_level = #{userLevel,jdbcType=INTEGER},
      user_address = #{userAddress,jdbcType=VARCHAR},
      user_logo = #{userLogo,jdbcType=VARCHAR},
      user_email = #{userEmail,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.circular.browser.dao.model.User">
    <id column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="login_id" jdbcType="VARCHAR" property="loginId" />
    <result column="user_phone_number" jdbcType="VARCHAR" property="userPhoneNumber" />
    <result column="user_nickname" jdbcType="VARCHAR" property="userNickname" />
    <result column="user_birthday" jdbcType="DATE" property="userBirthday" />
    <result column="user_gender" jdbcType="INTEGER" property="userGender" />
    <result column="user_tiny_img" jdbcType="VARCHAR" property="userTinyImg" />
    <result column="user_status" jdbcType="INTEGER" property="userStatus" />
    <result column="user_level" jdbcType="INTEGER" property="userLevel" />
    <result column="user_address" jdbcType="VARCHAR" property="userAddress" />
    <result column="user_logo" jdbcType="VARCHAR" property="userLogo" />
    <result column="user_email" jdbcType="VARCHAR" property="userEmail" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    user_id, login_id, user_phone_number, user_nickname, user_birthday, user_gender, 
    user_tiny_img, user_status, user_level, user_address, user_logo, user_email, create_time, 
    update_time
  </sql>
  <select id="selectByExample" parameterType="com.circular.browser.dao.model.UserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where user_id = #{userId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where user_id = #{userId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.circular.browser.dao.model.UserExample">
    delete from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.circular.browser.dao.model.User">
    insert into user (user_id, login_id, user_phone_number, 
      user_nickname, user_birthday, user_gender, 
      user_tiny_img, user_status, user_level, 
      user_address, user_logo, user_email, 
      create_time, update_time)
    values (#{userId,jdbcType=INTEGER}, #{loginId,jdbcType=VARCHAR}, #{userPhoneNumber,jdbcType=VARCHAR}, 
      #{userNickname,jdbcType=VARCHAR}, #{userBirthday,jdbcType=DATE}, #{userGender,jdbcType=INTEGER}, 
      #{userTinyImg,jdbcType=VARCHAR}, #{userStatus,jdbcType=INTEGER}, #{userLevel,jdbcType=INTEGER}, 
      #{userAddress,jdbcType=VARCHAR}, #{userLogo,jdbcType=VARCHAR}, #{userEmail,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.circular.browser.dao.model.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="loginId != null">
        login_id,
      </if>
      <if test="userPhoneNumber != null">
        user_phone_number,
      </if>
      <if test="userNickname != null">
        user_nickname,
      </if>
      <if test="userBirthday != null">
        user_birthday,
      </if>
      <if test="userGender != null">
        user_gender,
      </if>
      <if test="userTinyImg != null">
        user_tiny_img,
      </if>
      <if test="userStatus != null">
        user_status,
      </if>
      <if test="userLevel != null">
        user_level,
      </if>
      <if test="userAddress != null">
        user_address,
      </if>
      <if test="userLogo != null">
        user_logo,
      </if>
      <if test="userEmail != null">
        user_email,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="loginId != null">
        #{loginId,jdbcType=VARCHAR},
      </if>
      <if test="userPhoneNumber != null">
        #{userPhoneNumber,jdbcType=VARCHAR},
      </if>
      <if test="userNickname != null">
        #{userNickname,jdbcType=VARCHAR},
      </if>
      <if test="userBirthday != null">
        #{userBirthday,jdbcType=DATE},
      </if>
      <if test="userGender != null">
        #{userGender,jdbcType=INTEGER},
      </if>
      <if test="userTinyImg != null">
        #{userTinyImg,jdbcType=VARCHAR},
      </if>
      <if test="userStatus != null">
        #{userStatus,jdbcType=INTEGER},
      </if>
      <if test="userLevel != null">
        #{userLevel,jdbcType=INTEGER},
      </if>
      <if test="userAddress != null">
        #{userAddress,jdbcType=VARCHAR},
      </if>
      <if test="userLogo != null">
        #{userLogo,jdbcType=VARCHAR},
      </if>
      <if test="userEmail != null">
        #{userEmail,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.circular.browser.dao.model.UserExample" resultType="java.lang.Integer">
    select count(*) from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user
    <set>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.loginId != null">
        login_id = #{record.loginId,jdbcType=VARCHAR},
      </if>
      <if test="record.userPhoneNumber != null">
        user_phone_number = #{record.userPhoneNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.userNickname != null">
        user_nickname = #{record.userNickname,jdbcType=VARCHAR},
      </if>
      <if test="record.userBirthday != null">
        user_birthday = #{record.userBirthday,jdbcType=DATE},
      </if>
      <if test="record.userGender != null">
        user_gender = #{record.userGender,jdbcType=INTEGER},
      </if>
      <if test="record.userTinyImg != null">
        user_tiny_img = #{record.userTinyImg,jdbcType=VARCHAR},
      </if>
      <if test="record.userStatus != null">
        user_status = #{record.userStatus,jdbcType=INTEGER},
      </if>
      <if test="record.userLevel != null">
        user_level = #{record.userLevel,jdbcType=INTEGER},
      </if>
      <if test="record.userAddress != null">
        user_address = #{record.userAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.userLogo != null">
        user_logo = #{record.userLogo,jdbcType=VARCHAR},
      </if>
      <if test="record.userEmail != null">
        user_email = #{record.userEmail,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user
    set user_id = #{record.userId,jdbcType=INTEGER},
      login_id = #{record.loginId,jdbcType=VARCHAR},
      user_phone_number = #{record.userPhoneNumber,jdbcType=VARCHAR},
      user_nickname = #{record.userNickname,jdbcType=VARCHAR},
      user_birthday = #{record.userBirthday,jdbcType=DATE},
      user_gender = #{record.userGender,jdbcType=INTEGER},
      user_tiny_img = #{record.userTinyImg,jdbcType=VARCHAR},
      user_status = #{record.userStatus,jdbcType=INTEGER},
      user_level = #{record.userLevel,jdbcType=INTEGER},
      user_address = #{record.userAddress,jdbcType=VARCHAR},
      user_logo = #{record.userLogo,jdbcType=VARCHAR},
      user_email = #{record.userEmail,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.circular.browser.dao.model.User">
    update user
    <set>
      <if test="loginId != null">
        login_id = #{loginId,jdbcType=VARCHAR},
      </if>
      <if test="userPhoneNumber != null">
        user_phone_number = #{userPhoneNumber,jdbcType=VARCHAR},
      </if>
      <if test="userNickname != null">
        user_nickname = #{userNickname,jdbcType=VARCHAR},
      </if>
      <if test="userBirthday != null">
        user_birthday = #{userBirthday,jdbcType=DATE},
      </if>
      <if test="userGender != null">
        user_gender = #{userGender,jdbcType=INTEGER},
      </if>
      <if test="userTinyImg != null">
        user_tiny_img = #{userTinyImg,jdbcType=VARCHAR},
      </if>
      <if test="userStatus != null">
        user_status = #{userStatus,jdbcType=INTEGER},
      </if>
      <if test="userLevel != null">
        user_level = #{userLevel,jdbcType=INTEGER},
      </if>
      <if test="userAddress != null">
        user_address = #{userAddress,jdbcType=VARCHAR},
      </if>
      <if test="userLogo != null">
        user_logo = #{userLogo,jdbcType=VARCHAR},
      </if>
      <if test="userEmail != null">
        user_email = #{userEmail,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.circular.browser.dao.model.User">
    update user
    set login_id = #{loginId,jdbcType=VARCHAR},
      user_phone_number = #{userPhoneNumber,jdbcType=VARCHAR},
      user_nickname = #{userNickname,jdbcType=VARCHAR},
      user_birthday = #{userBirthday,jdbcType=DATE},
      user_gender = #{userGender,jdbcType=INTEGER},
      user_tiny_img = #{userTinyImg,jdbcType=VARCHAR},
      user_status = #{userStatus,jdbcType=INTEGER},
      user_level = #{userLevel,jdbcType=INTEGER},
      user_address = #{userAddress,jdbcType=VARCHAR},
      user_logo = #{userLogo,jdbcType=VARCHAR},
      user_email = #{userEmail,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
</mapper>