<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.circular.browser.auth.dao.mapper.AccountMapper" >
  <resultMap id="BaseResultMap" type="com.circular.browser.auth.dao.model.Account" >
    <id column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="user_phone_number" property="userPhoneNumber" jdbcType="VARCHAR" />
    <result column="user_nickname" property="userNickname" jdbcType="VARCHAR" />
    <result column="user_tiny_img" property="userTinyImg" jdbcType="VARCHAR" />
    <result column="user_status" property="userStatus" jdbcType="TINYINT" />
    <result column="user_level" property="userLevel" jdbcType="TINYINT" />
    <result column="user_address" property="userAddress" jdbcType="VARCHAR" />
    <result column="user_logo" property="userLogo" jdbcType="VARCHAR" />
    <result column="user_email" property="userEmail" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    user_id, user_phone_number, user_nickname, user_tiny_img, user_status, user_level, 
    user_address, user_logo, user_email, create_time, update_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.circular.browser.auth.dao.model.AccountExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from account
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from account
    where user_id = #{userId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from account
    where user_id = #{userId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.circular.browser.auth.dao.model.AccountExample" >
    delete from account
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.circular.browser.auth.dao.model.Account" >
    insert into account (user_id, user_phone_number, user_nickname, 
      user_tiny_img, user_status, user_level, 
      user_address, user_logo, user_email, 
      create_time, update_time)
    values (#{userId,jdbcType=BIGINT}, #{userPhoneNumber,jdbcType=VARCHAR}, #{userNickname,jdbcType=VARCHAR}, 
      #{userTinyImg,jdbcType=VARCHAR}, #{userStatus,jdbcType=TINYINT}, #{userLevel,jdbcType=TINYINT}, 
      #{userAddress,jdbcType=VARCHAR}, #{userLogo,jdbcType=VARCHAR}, #{userEmail,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.circular.browser.auth.dao.model.Account" >
    insert into account
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        user_id,
      </if>
      <if test="userPhoneNumber != null" >
        user_phone_number,
      </if>
      <if test="userNickname != null" >
        user_nickname,
      </if>
      <if test="userTinyImg != null" >
        user_tiny_img,
      </if>
      <if test="userStatus != null" >
        user_status,
      </if>
      <if test="userLevel != null" >
        user_level,
      </if>
      <if test="userAddress != null" >
        user_address,
      </if>
      <if test="userLogo != null" >
        user_logo,
      </if>
      <if test="userEmail != null" >
        user_email,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="userPhoneNumber != null" >
        #{userPhoneNumber,jdbcType=VARCHAR},
      </if>
      <if test="userNickname != null" >
        #{userNickname,jdbcType=VARCHAR},
      </if>
      <if test="userTinyImg != null" >
        #{userTinyImg,jdbcType=VARCHAR},
      </if>
      <if test="userStatus != null" >
        #{userStatus,jdbcType=TINYINT},
      </if>
      <if test="userLevel != null" >
        #{userLevel,jdbcType=TINYINT},
      </if>
      <if test="userAddress != null" >
        #{userAddress,jdbcType=VARCHAR},
      </if>
      <if test="userLogo != null" >
        #{userLogo,jdbcType=VARCHAR},
      </if>
      <if test="userEmail != null" >
        #{userEmail,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.circular.browser.auth.dao.model.AccountExample" resultType="java.lang.Integer" >
    select count(*) from account
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update account
    <set >
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.userPhoneNumber != null" >
        user_phone_number = #{record.userPhoneNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.userNickname != null" >
        user_nickname = #{record.userNickname,jdbcType=VARCHAR},
      </if>
      <if test="record.userTinyImg != null" >
        user_tiny_img = #{record.userTinyImg,jdbcType=VARCHAR},
      </if>
      <if test="record.userStatus != null" >
        user_status = #{record.userStatus,jdbcType=TINYINT},
      </if>
      <if test="record.userLevel != null" >
        user_level = #{record.userLevel,jdbcType=TINYINT},
      </if>
      <if test="record.userAddress != null" >
        user_address = #{record.userAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.userLogo != null" >
        user_logo = #{record.userLogo,jdbcType=VARCHAR},
      </if>
      <if test="record.userEmail != null" >
        user_email = #{record.userEmail,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update account
    set user_id = #{record.userId,jdbcType=BIGINT},
      user_phone_number = #{record.userPhoneNumber,jdbcType=VARCHAR},
      user_nickname = #{record.userNickname,jdbcType=VARCHAR},
      user_tiny_img = #{record.userTinyImg,jdbcType=VARCHAR},
      user_status = #{record.userStatus,jdbcType=TINYINT},
      user_level = #{record.userLevel,jdbcType=TINYINT},
      user_address = #{record.userAddress,jdbcType=VARCHAR},
      user_logo = #{record.userLogo,jdbcType=VARCHAR},
      user_email = #{record.userEmail,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.circular.browser.auth.dao.model.Account" >
    update account
    <set >
      <if test="userPhoneNumber != null" >
        user_phone_number = #{userPhoneNumber,jdbcType=VARCHAR},
      </if>
      <if test="userNickname != null" >
        user_nickname = #{userNickname,jdbcType=VARCHAR},
      </if>
      <if test="userTinyImg != null" >
        user_tiny_img = #{userTinyImg,jdbcType=VARCHAR},
      </if>
      <if test="userStatus != null" >
        user_status = #{userStatus,jdbcType=TINYINT},
      </if>
      <if test="userLevel != null" >
        user_level = #{userLevel,jdbcType=TINYINT},
      </if>
      <if test="userAddress != null" >
        user_address = #{userAddress,jdbcType=VARCHAR},
      </if>
      <if test="userLogo != null" >
        user_logo = #{userLogo,jdbcType=VARCHAR},
      </if>
      <if test="userEmail != null" >
        user_email = #{userEmail,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where user_id = #{userId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.circular.browser.auth.dao.model.Account" >
    update account
    set user_phone_number = #{userPhoneNumber,jdbcType=VARCHAR},
      user_nickname = #{userNickname,jdbcType=VARCHAR},
      user_tiny_img = #{userTinyImg,jdbcType=VARCHAR},
      user_status = #{userStatus,jdbcType=TINYINT},
      user_level = #{userLevel,jdbcType=TINYINT},
      user_address = #{userAddress,jdbcType=VARCHAR},
      user_logo = #{userLogo,jdbcType=VARCHAR},
      user_email = #{userEmail,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where user_id = #{userId,jdbcType=BIGINT}
  </update>
</mapper>